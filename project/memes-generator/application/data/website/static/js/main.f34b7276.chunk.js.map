{"version":3,"sources":["components/CreateMem.js","components/Last10Mems.js","App.js","reportWebVitals.js","index.js"],"names":["MemImage","styled","img","CreateMem","props","updateImage","imageId","setState","memImage","window","Configs","PhotosURL","handleInputChange","event","memText","target","value","handleCreateMemButtonClick","console","log","state","axios","post","ApiURL","text","then","res","data","fileName","className","rows","this","defaultValue","onChange","onClick","src","React","Component","LastImagesWrapper","div","LastImage","Last10Mems","last10Images","get","forEach","x","push","id","url","map","image","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","defaults","headers","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAIMA,EAAWC,IAAOC,IAAV,2EAoDCC,E,kDA7CX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAIVC,YAAc,SAACC,GACX,EAAKC,SAAS,CAACC,SAAUC,OAAOC,QAAQC,UAAU,aAAeL,KANlD,EAQnBM,kBAAoB,SAACC,GACjB,EAAKN,SAAS,CAACO,QAASD,EAAME,OAAOC,SATtB,EAanBC,2BAA6B,WACzBC,QAAQC,IAAI,EAAKC,OACjBC,IAAMC,KAAKb,OAAOC,QAAQa,OAAU,QAAS,CAACC,KAAM,EAAKJ,MAAMN,UAC1DW,MAAK,SAAAC,GACF,EAAKrB,YAAYqB,EAAIC,KAAKC,cAflC,EAAKR,MAAQ,CAACZ,SAAU,KAAMM,QAAS,uBAFxB,E,0CAuBnB,WAEI,OACI,sBAAKe,UAAU,yBAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,sBAAKA,UAAU,8BAAf,UACI,0BAAUC,KAAM,EAAGd,MAAOe,KAAKX,MAAMN,QAASkB,aAAcD,KAAKX,MAAMN,QAASmB,SAAUF,KAAKnB,oBAC/F,wBAAQiB,UAAU,wBAAwBK,QAASH,KAAKd,2BAAxD,4BAGR,qBAAKY,UAAU,6BAAf,SACME,KAAKX,MAAMZ,SACX,cAACR,EAAD,CAAUmC,IAAKJ,KAAKX,MAAMZ,WAE1B,wE,GAvCE4B,IAAMC,WCJxBC,EAAoBrC,IAAOsC,IAAV,oMAUjBC,EAAYvC,IAAOC,IAAV,wLA4CAuC,E,kDAjCX,aAAe,IAAD,8BACV,gBACKrB,MAAQ,CAAEsB,aAAc,IAFnB,E,qDAKd,WAAqB,IAAD,OAEhBrB,IAAMsB,IAAIlC,OAAOC,QAAQC,UAAY,qBAChCc,MAAK,SAAAC,GACF,IAAIgB,EAAe,GACnBhB,EAAIC,KAAKiB,SAAS,SAAAC,GACdH,EAAaI,KAAK,CAChBC,GAAIF,EAAEE,GACNC,IAAKvC,OAAOC,QAAQC,UAAW,aAAckC,EAAEjB,cAGrD,EAAKrB,SAAS,CAACmC,sB,oBAI3B,WAEI,OACI,cAACJ,EAAD,UACKP,KAAKX,MAAMsB,aAAaO,KAAK,SAAAC,GAAK,OAC/B,cAACV,EAAD,CAA0BL,IAAKe,EAAMF,KAArBE,EAAMH,a,GA3BjBX,IAAMC,W,MCDhBc,MAlBf,WACE,OACE,8BACE,sBAAKtB,UAAU,YAAf,UACE,qBAAKA,UAAU,SAAf,4BAGA,8BACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,eCHGuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7B,MAAK,YAAkD,IAA/C8B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdhC,IAAMuC,SAASC,QAAQvC,KAAK,gBAAkB,mBAE9CwC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.f34b7276.chunk.js","sourcesContent":["import React from 'react';\nimport styled from \"styled-components\";\nimport axios from 'axios'\n\nconst MemImage = styled.img`\n    max-height: 600px;\n    max-width: 550px;\n`\n\nclass CreateMem extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {memImage: null, memText: \"Tu wpisz tekst mema\"};\n    }\n\n    updateImage = (imageId) => {\n        this.setState({memImage: window.Configs.PhotosURL+\"/download/\" + imageId})\n    }\n    handleInputChange = (event) => {\n        this.setState({memText: event.target.value})\n\n    }\n\n    handleCreateMemButtonClick = () => {\n        console.log(this.state)\n        axios.post(window.Configs.ApiURL +  \"memes\", {text: this.state.memText})\n            .then(res => {\n                this.updateImage(res.data.fileName);\n            })\n\n    }\n\n\n    render()\n    {\n        return (\n            <div className=\"c-create-meme__wrapper\">\n                <div className=\"c-create-meme__form\">\n                    <div className=\"c-create-meme__form-wrapper\">\n                        <textarea rows={2} value={this.state.memText} defaultValue={this.state.memText} onChange={this.handleInputChange} />\n                        <button className=\"c-create-meme__button\" onClick={this.handleCreateMemButtonClick}>Utwórz</button>\n                    </div>\n                </div>\n                <div className=\"c-create-meme__img-wrapper\">\n                    { this.state.memImage ? (\n                      <MemImage src={this.state.memImage}/>\n                    ) : (\n                      <p>Tutaj pojawi się nowy mem</p>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default CreateMem;","import React from 'react';\nimport axios from \"axios\";\nimport styled from \"styled-components\";\n\n\nconst LastImagesWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  column-gap: 48px;\n  row-gap: 48px;\n  justify-items: center;\n  align-items:center;\n  margin-bottom: 128px;\n\n`\nconst LastImage = styled.img`\n  width: 100%;\n  background-position: center;\n  background-size:cover;\n  background-color: #ddd;\n  background-repeat: no-repeat;\n  min-height: 500px;\n`\n\nclass Last10Mems extends React.Component  {\n\n    constructor() {\n        super();\n        this.state = { last10Images: []}\n    }\n\n    componentDidMount() {\n\n        axios.get(window.Configs.PhotosURL + 'memes?maxItems=10')\n            .then(res => {\n                let last10Images = [];\n                res.data.forEach (x => {\n                    last10Images.push({\n                      id: x.id,\n                      url: window.Configs.PhotosURL +\"/download/\"+ x.fileName\n                    })\n                } )\n                this.setState({last10Images})\n            })\n    }\n\n    render()\n    {\n        return (\n            <LastImagesWrapper>\n                {this.state.last10Images.map (image => (\n                    <LastImage key={image.id} src={image.url}/>\n                ))}\n\n            </LastImagesWrapper>\n        );\n    }\n}\n\nexport default Last10Mems;","import CreateMem from \"./components/CreateMem\";\nimport Last10Mems from \"./components/Last10Mems\";\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <div>\n      <div className=\"container\">\n        <div className=\"header\">\n          Memy w Chmurze\n        </div>\n        <div>\n          <div>\n            <CreateMem/>\n            <Last10Mems/>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport axios from 'axios';\n\n//axios.defaults.baseURL = 'http://localhost:8081/';\naxios.defaults.headers.post['Content-Type'] = 'application/json';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}