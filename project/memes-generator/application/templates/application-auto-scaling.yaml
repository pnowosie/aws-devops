AWSTemplateFormatVersion: 2010-09-09
Description: Template for Application

Parameters:
  Project:
    Description: Project name
    Type: String
    AllowedPattern: ^[a-z][a-zA-Z0-9-]{3,20}$
  Component:
    Description: Name of the component
    Type: String
    AllowedPattern: ^[a-z][a-zA-Z0-9-]{3,15}$
  Stage:
    Description: Stage name
    Type: String
    AllowedPattern: ^[a-z][a-zA-Z0-9-]{2,15}$
  ApplicationPort:
    Description: Port for Http API access to Application
    Type: String
  DesiredCapacity:
    Description: Desired ASG Capacity
    Type: String
    Default: "1"
  LaunchTemplateId:
    Description: Launch template ID
    Type: AWS::SSM::Parameter::Value<String>
  LaunchTemplateVersion:
    Description: Launch template version
    Type: String
    Default: ''
  LaunchTemplateLatestVersion:
    Description: Launch template latest version
    Type: AWS::SSM::Parameter::Value<String>
  LoadBalancer:
    Description: The LoadBalancer ARN
    Type: AWS::SSM::Parameter::Value<String>
  MinimumCapacity:
    Description: Minimum ASG Capacity
    Type: String
    Default: "1"
  MaximumCapacity:
    Description: Maximum ASG Capacity
    Type: String
    Default: "2"
  PrivateSubnetAId:
    Description: Private Subnet Id
    Type: AWS::SSM::Parameter::Value<String>
  PrivateSubnetBId:
    Description: Private Subnet Id
    Type: AWS::SSM::Parameter::Value<String>
  VPCId:
    Description: VPC Id
    Type: AWS::SSM::Parameter::Value<String>

Conditions:
  UseProvidedTemplateVersion: !Not [ !Equals [!Ref LaunchTemplateVersion, ''] ]

Resources:
  ApplicationAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplateId
        Version: !If
          - UseProvidedTemplateVersion
          - !Ref LaunchTemplateVersion
          - !Ref LaunchTemplateLatestVersion
      MinSize: !Ref MinimumCapacity
      MaxSize: !Ref MaximumCapacity
      DesiredCapacity: !Ref DesiredCapacity
      HealthCheckType: ELB
      HealthCheckGracePeriod: 300
      VPCZoneIdentifier:
        - !Ref PrivateSubnetAId
        - !Ref PrivateSubnetBId
      TargetGroupARNs:
        - !Ref ApplicationTargetGroup
      Tags:
        - Key: Name
          Value: !Sub ${Project}-${Stage}-${Component}-application-asg
          PropagateAtLaunch: false

  ScaleOutPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName:
        Ref: ApplicationAutoScalingGroup
      Cooldown: '300'
      ScalingAdjustment: 1

  ScaleInPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName:
        Ref: ApplicationAutoScalingGroup
      Cooldown: '300'
      ScalingAdjustment: -1

  CPUAlarmHigh:
    Type: AWS::CloudWatch::Alarm
    Properties:
      EvaluationPeriods: 1
      Statistic: Average
      Threshold: 70
      AlarmDescription: High CPU Alarm to trigger the scale out policy
      Period: 300
      AlarmActions:
      - Ref: ScaleOutPolicy
      Namespace: AWS/EC2
      Dimensions:
      - Name: AutoScalingGroupName
        Value:
          Ref: ApplicationAutoScalingGroup
      ComparisonOperator: GreaterThanThreshold
      MetricName: CPUUtilization

  CPUAlarmLow:
    Type: AWS::CloudWatch::Alarm
    Properties:
      EvaluationPeriods: 3
      Statistic: Average
      Threshold: 30
      AlarmDescription: Low CPU Alarm to trigger the scale in policy
      Period: 300
      AlarmActions:
      - Ref: ScaleInPolicy
      Namespace: AWS/EC2
      Dimensions:
      - Name: AutoScalingGroupName
        Value:
          Ref: ApplicationAutoScalingGroup
      ComparisonOperator: LessThanThreshold
      MetricName: CPUUtilization

  ApplicationTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub ${Project}-${Stage}-tg
      HealthCheckPath: "/actuator/health"
      Port: !Ref ApplicationPort
      Protocol: 'HTTP'
      VpcId: !Ref VPCId
      Tags:
        - Key: Name
          Value: !Sub ${Project}-${Stage}-${Component}-application-tg

  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref ApplicationTargetGroup

Outputs:
  AutoScalingGroupName:
    Description: Name of the autoscaling group
    Value: !Ref ApplicationAutoScalingGroup
